// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package mathmodule.actions;

import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;
import com.mendix.systemwideinterfaces.core.IMendixObject;
import mathmodule.Misc;
import mathmodule.proxies.SimpleExpressionResult;
import org.mariuszgromada.math.mxparser.Expression;

public class SimpleExpression extends CustomJavaAction<IMendixObject>
{
	private java.lang.String Expression;

	public SimpleExpression(IContext context, java.lang.String Expression)
	{
		super(context);
		this.Expression = Expression;
	}

	@java.lang.Override
	public IMendixObject executeAction() throws Exception
	{
		// BEGIN USER CODE
		IContext ctx = this.getContext();
		if (this.Expression == "" || this.Expression == null) {
			return Misc.getExpressionError(ctx, SimpleExpressionResult.getType(), "Expression cannot be empty");
		}
		Expression simpleExpression = new Expression(this.Expression);
		boolean syntaxValid = simpleExpression.checkSyntax();
		
		if (syntaxValid) {
			double expressionResult = simpleExpression.calculate();
			
			boolean afterCalculateSatus = simpleExpression.checkSyntax();
			if (afterCalculateSatus) {
				if (Double.isNaN(expressionResult)) {
					return Misc.getExpressionError(ctx, SimpleExpressionResult.getType(), "Expression result is not a number");
				}
				return Misc.getSimpleExpressionResult(ctx, expressionResult);
			} else {
				return Misc.getExpressionError(ctx, SimpleExpressionResult.getType(), simpleExpression.getErrorMessage());
			}

		} else {
			return Misc.getExpressionError(ctx, SimpleExpressionResult.getType(), simpleExpression.getErrorMessage());
		}
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "SimpleExpression";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
